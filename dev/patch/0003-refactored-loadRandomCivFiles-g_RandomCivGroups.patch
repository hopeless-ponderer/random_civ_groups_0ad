From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: hopeless-ponderer <hopelessponderer1123@gmail.com>
Date: Sun, 27 Jun 2021 09:31:24 -0700
Subject: [PATCH] refactored loadRandomCivFiles, g_RandomCivGroups

Code is now a redundant property, as it is now generated from the file name
---
 .../mods/public/globalscripts/Templates.js    |  4 +-
 .../public/gui/common/functions_utility.js    |  2 +-
 .../mods/public/gui/gamesetup/gamesetup.js    | 41 +++++--------------
 3 files changed, 15 insertions(+), 32 deletions(-)

diff --git a/binaries/data/mods/public/globalscripts/Templates.js b/binaries/data/mods/public/globalscripts/Templates.js
index 9686ee0255..e7812391a3 100644
--- a/binaries/data/mods/public/globalscripts/Templates.js
+++ b/binaries/data/mods/public/globalscripts/Templates.js
@@ -33,11 +33,13 @@ function loadCivFiles(selectableOnly)
  */
 function loadRandomCivFiles()
 {
+	const randomCivDir = "simulation/data/settings/random_groups/";
 	let randomGroups = [];
 
-	for (let filename of Engine.ListDirectoryFiles("simulation/data/settings/random_groups/", "*.json", false))
+	for (let filename of Engine.ListDirectoryFiles(randomCivDir, "*.json", false))
 	{
 		let data = Engine.ReadJSONFile(filename);
+		data.Code = filename.substring(randomCivDir.length, filename.length - 5);
 
 		randomGroups.push(data);
 	}// end for let filename
diff --git a/binaries/data/mods/public/gui/common/functions_utility.js b/binaries/data/mods/public/gui/common/functions_utility.js
index 843ef076af..bb465f4027 100644
--- a/binaries/data/mods/public/gui/common/functions_utility.js
+++ b/binaries/data/mods/public/gui/common/functions_utility.js
@@ -53,7 +53,7 @@ function loadRandomCivGroups()
 
 	translateObjectKeys(randomGroups, ["Title", "Tooltip"]);
 
-	return deepfreeze(randomGroups);
+	return randomGroups;
 }// end loadRandomCivGroups
 
 // A sorting function for arrays of objects with 'name' properties, ignoring case
diff --git a/binaries/data/mods/public/gui/gamesetup/gamesetup.js b/binaries/data/mods/public/gui/gamesetup/gamesetup.js
index b3bd09021e..3115c049c4 100644
--- a/binaries/data/mods/public/gui/gamesetup/gamesetup.js
+++ b/binaries/data/mods/public/gui/gamesetup/gamesetup.js
@@ -11,18 +11,15 @@ const g_VictoryConditions = g_Settings && g_Settings.VictoryConditions;
  * Load unselectable civs as they could appear in scenario maps.
  */
 const g_CivData = loadCivData(false, false);
-const g_RandomCivGroups = loadRandomCivGroups().map((group) => {
+const g_RandomCivGroups = deepfreeze(loadRandomCivGroups().map((group) => {
 	if (group.Disable)
 		return null;
 	if (!group.Title || !group.Code) {
 		error(sprintf('Random civ groups must have Title and Code; disabling %s (%s)', group.Title || 'undefined', group.Code || 'undefined'));
 		return null;
 	}
-	if (!group.Code.split('').every((ch) => (ch >= 'a' && ch <= 'z') || ch === '_')) {
-		error(sprintf('Random civ group Codes can only contain letters a-z and _; disabling %s (%s)', group.Title, group.Code));
-		return null;
-	}
 	let weights = {};
+	// "*" signifies a standard weight to apply to all available civs; can be overridden later
 	if (group.Weights.hasOwnProperty('*') && group.Weights['*'] !== 0) {
 		let std_weight = group.Weights['*'];
 		if (std_weight < 0) {
@@ -41,38 +38,22 @@ const g_RandomCivGroups = loadRandomCivGroups().map((group) => {
 			error(sprintf('Random civ group weights must be >= 0 (got "%s": %d); disabling %s', civ, group.Weights[civ], group.Title));
 			return null;
 		}
+		// this is where std weight overriding takes place, if applicable
 		if (g_CivData.hasOwnProperty(civ) && g_CivData[civ].SelectableInGameSetup)
 			weights[civ] = group.Weights[civ];
 		if (weights[civ] === 0)
 			delete weights[civ];
 	}// end for civ
+	// filter out any selection group with less than two available civs
 	if (Object.keys(weights).length < 2)
-	{
 		return null;
-	}
-	let filtered_group = {};
-	for (let property in group) {
-		if (property !== 'Weights')
-			filtered_group[property] = group[property];
-	}
-	if (!filtered_group.Tooltip)
-		filtered_group.Tooltip = 'Random civ selection group';
-	if (!filtered_group.GUIOrder && filtered_group.GUIOrder !== 0)
-		filtered_group.GUIOrder = 3;
-	filtered_group.Weights = weights;
-	return filtered_group;
-}).filter((group) => group).map((() => {
-	let group_codes = {};
-	return (group) => {
-		if (group_codes.hasOwnProperty(group.Code)) {
-			group_codes[group.Code] += 1;
-			group.Code = sprintf('%s_%d', group.Code, group_codes[group.Code]);
-		} else {
-			group_codes[group.Code] = 1;
-		}
-		return group;
-	};
-})());
+	if (!group.Tooltip)
+		group.Tooltip = 'Random civ selection group';
+	if (!group.hasOwnProperty('GUIOrder'))
+		group.GUIOrder = 3;
+	group.Weights = weights;
+	return group;
+}).filter((group) => group));
 
 /**
  * Remembers which clients are assigned to which player slots and whether they are ready.
-- 
2.25.1

